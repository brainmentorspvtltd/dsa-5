/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
     
        if(head==null ||head.next==null){
            return head;
        }
        else{
            
            ListNode head1=head,prev=null, head2=head.next;
            while(head2!=null){
                if(head1.val==head2.val){
                    head2=head2.next;
                }
                else if(head1.val!=head2.val && head1.next!=head2){
                    while(head1.next!=head2){
                        head1=head1.next;
                    }
                    if(prev==null){
                        head=head2;
                    }
                    else{
                        prev.next=head2;
                    }
                    head1.next=null;
                    head1=head2;
                    head2=head2.next;
                }
                else if(head1.next==head2){
                    prev=head1;
                    head1=head2;
                    head2=head2.next;
                }
            }
            
            if(head1.next!=head2){
                {
                    if(prev!=null)
                    prev.next=null;
                    else{
                        return null;
                    }
                }
        }
        
        }
        return head;
    }
}















